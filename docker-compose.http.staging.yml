version: '3.3'

services: 
  appName_nginx: 
    build: ./nginx
    depends_on:
      - appName_web 
    ports:
      - 80:80
    volumes:
      - appName_static_volume:/usr/src/app/staticfiles
      - appName_media_volume:/usr/src/app/mediafiles

  appName_web: 
    build:
      context: ./app
      dockerfile: Dockerfile.prod 

    command: gunicorn appName.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - appName_static_volume:/usr/src/app/staticfiles
      - appName_media_volume:/usr/src/app/mediafiles  
    expose:
      - 8000
    depends_on:
      - appName_production_db 
    restart: always 
    environment:  
      - DEBUG=0
      - SECRET_KEY=1a-owqf2mb2+im(d(jedgtylaogc8)0#1bcv3*1j=l^zu6l_nj
      - ALLOWED_HOSTS=localhost
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=appName_production_db
      - SQL_USER=appName_production_user
      - SQL_PASSWORD=appName_production_password
      - SQL_HOST=appName_production_db
      - SQL_PORT=5432

  appName_production_db:
    image: postgres:13.0-alpine
    volumes:
      - appName_production_postgres_data:/var/lib/postgresql/data/  
    environment:
      - POSTGRES_USER=appName_production_user 
      - POSTGRES_PASSWORD=appName_production_password
      - POSTGRES_DB=appName_production_db   


volumes:
  appName_production_postgres_data: 
  appName_static_volume:
  appName_media_volume:



